# Generated by Django 5.0.8 on 2024-09-09 03:00

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0014_alter_institutionpage_owner_user'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='invitation',
            name='institution',
        ),
        migrations.RemoveField(
            model_name='invitation',
            name='invited_user',
        ),
        migrations.RemoveField(
            model_name='datadictionary',
            name='title',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='authors',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='data_collection_date',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='data_size',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='data_type',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='distributor',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='file_format',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='intended_use',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='keywords',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='location',
        ),
        migrations.RemoveField(
            model_name='datasetpage',
            name='use_limitations',
        ),
        migrations.AddField(
            model_name='datadictionary',
            name='field_name',
            field=models.CharField(default='5', max_length=255, verbose_name='Nombre del campo'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datasetpage',
            name='access_instructions',
            field=wagtail.fields.RichTextField(blank=True, null=True, verbose_name='Instrucciones de acceso'),
        ),
        migrations.AddField(
            model_name='datasetpage',
            name='identifier',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Identificador'),
        ),
        migrations.AddField(
            model_name='datasetpage',
            name='use_license',
            field=models.CharField(default='', max_length=255, verbose_name='Licencia de Uso'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='datadictionary',
            name='description',
            field=models.CharField(max_length=255, verbose_name='Descripción'),
        ),
        migrations.AlterField(
            model_name='datasetpage',
            name='citation',
            field=models.CharField(blank=True, max_length=255, verbose_name='Citación'),
        ),
        migrations.CreateModel(
            name='ComplementaryInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=255, verbose_name='Característica')),
                ('description', models.CharField(max_length=255, verbose_name='Descripción')),
                ('dataset', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='complementary_info', to='home.datasetpage')),
            ],
        ),
        migrations.CreateModel(
            name='DatasetAuthorsTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasetpage_authors_tags', to='home.datasetpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatasetFileFormatsTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasetpage_file_format_tags', to='home.datasetpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatasetPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasetpage_keywords_tags', to='home.datasetpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DatasetPartnerInstitutionsTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasetpage_partner_institution_tags', to='home.datasetpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='AdditionalInfo',
        ),
        migrations.DeleteModel(
            name='Invitation',
        ),
    ]
